openapi: 3.0.0
info:
  title: Individuals API
  description: REST API для регистрации, логина, обновления токена и получения информации о пользователе через Keycloak.
  version: 1.0.1
servers:
  - url: http://localhost:8081

paths:
  /individual/v1/persons/email/{email}:
    get:
      summary: Get person by email
      operationId: "findByEmail"
      tags:
        - Person
      parameters:
        - in: path
          name: email
          required: true
          schema:
            type: string
            format: email
      responses:
        '201':
          description: Successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualDto'

  /individual/v1/persons/{id}:
    get:
      summary: Get person by id
      operationId: "findById"
      tags:
        - Person
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Successfully found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualDto'
    put:
      summary: Update individual
      operationId: "update"
      tags:
        - Person
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './component/components.yaml#/components/schemas/IndividualWriteDto'
      responses:
        '201':
          description: Successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndividualWriteResponseDto'
    delete:
      summary: soft delete person by id
      operationId: "delete"
      tags:
        - Person
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted

components:
  schemas:
    IndividualWriteResponseDto:
      type: object
      required: [ id ]
      properties:
        id:
          type: string
    IndividualDto:
      type: object
      required: [
        email,
        password,
        confirm_password,
        firstName,
        lastName,
        passport_number,
        phone_number,
        address,
      ]
      properties:
        firstName:
          type: string
          format: email
        lastName:
          type: string
          format: email
        email:
          type: string
          format: email
        password:
          type: string
        confirm_password:
          type: string
        passport_number:
          type: string
        phone_number:
          type: string
        address:
          $ref: '#/components/schemas/AddressDto'

    AddressDto:
      type: object
      required: [ ]
      properties:
        address:
          type: string
        zip_code:
          type: string
        city:
          type: string
        country_code:
          type: string