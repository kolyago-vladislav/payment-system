openapi: 3.0.0
info:
  title: Transaction Service API
  description: REST API для взаимодействия с Transaction сервисом.
  version: 1.1.1
servers:
  - url: http://localhost:8093/api/v1

paths:
  /transaction/v1/wallets:
    post:
      summary: Создание кошелька пользователя
      operationId: "create"
      tags:
        - Wallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
      responses:
        '201':
          description: Кошелёк успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction/v1/wallets/{walletUid}:
    get:
      summary: Получение информации о кошельке
      operationId: "findById"
      tags:
        - Wallet
      parameters:
        - name: walletUid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные кошелька
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletResponse'
        '404':
          description: Кошелёк не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction/v1/wallets/user/{userUid}:
    get:
      summary: Получение всех кошельков пользователя
      operationId: "findByUserId"
      tags:
        - Wallet
      parameters:
        - name: userUid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список кошельков пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WalletResponse'

  # Transactions
  /transaction/v1/transactions/{type}/init:
    post:
      summary: Инициализация транзакции (без создания)
      operationId: "init"
      tags:
        - Transaction
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [ deposit, withdrawal, transfer ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DepositInitRequest'
                - $ref: '#/components/schemas/WithdrawalInitRequest'
                - $ref: '#/components/schemas/TransferInitRequest'
      responses:
        '200':
          description: Условия транзакции
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionInitResponse'
        '400':
          description: Ошибка валидации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction/v1/transactions/{type}/confirm:
    post:
      summary: Подтверждение и запуск транзакции
      operationId: "confirm"
      tags:
        - Transaction
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
            enum: [ deposit, withdrawal, transfer ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DepositConfirmRequest'
                - $ref: '#/components/schemas/WithdrawalConfirmRequest'
                - $ref: '#/components/schemas/TransferConfirmRequest'
      responses:
        '200':
          description: Транзакция подтверждена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionConfirmResponse'
        '400':
          description: Ошибка подтверждения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction/v1/transactions/{transactionId}/status:
    get:
      summary: Получение статуса транзакции
      operationId: "getS tatus"
      tags:
        - Transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Статус и детали транзакции
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
        '404':
          description: Транзакция не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /transaction/v1/transactions:
    get:
      summary: Поиск транзакций по фильтрам с пагинацией
      operationId: "findAll"
      tags:
        - Transaction
      parameters:
        - in: query
          name: userUid
          schema:
            type: string
        - in: query
          name: walletUid
          schema:
            type: string
        - in: query
          name: type
          schema:
            type: string
            enum: [ deposit, withdrawal, transfer ]
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date-time
        - in: query
          name: dateTo
          schema:
            type: string
            format: date-time
        - in: query
          name: page
          schema:
            type: integer
            default: 0
        - in: query
          name: size
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Список транзакций
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionStatusResponse'

components:
  schemas:
    CreateWalletRequest:
      type: object
      required:
        - userUid
        - currency
      properties:
        userUid:
          type: string
          description: Уникальный идентификатор пользователя
        currency:
          type: string
          description: Валюта кошелька (например, RUB, USD)

    WalletResponse:
      type: object
      properties:
        walletUid:
          type: string
          description: Уникальный идентификатор кошелька
        userUid:
          type: string
        currency:
          type: string
        balance:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time

    # Transactions Init Requests
    DepositInitRequest:
      type: object
      required:
        - walletUid
        - amount
      properties:
        walletUid:
          type: string
        amount:
          type: number
          format: double
          minimum: 0.01

    WithdrawalInitRequest:
      type: object
      required:
        - walletUid
        - amount
      properties:
        walletUid:
          type: string
        amount:
          type: number
          format: double
          minimum: 0.01

    TransferInitRequest:
      type: object
      required:
        - fromWalletUid
        - toWalletUid
        - amount
      properties:
        fromWalletUid:
          type: string
        toWalletUid:
          type: string
        amount:
          type: number
          format: double
          minimum: 0.01

    # Transactions Confirm Requests
    DepositConfirmRequest:
      type: object
      required:
        - walletUid
        - amount
        - metadata
      properties:
        walletUid:
          type: string
        amount:
          type: number
          format: double
        metadata:
          type: object
          description: Дополнительные данные (например, источник пополнения)
          additionalProperties: true

    WithdrawalConfirmRequest:
      type: object
      required:
        - walletUid
        - amount
        - metadata
      properties:
        walletUid:
          type: string
        amount:
          type: number
          format: double
        metadata:
          type: object
          description: Дополнительные данные (например, причина списания)
          additionalProperties: true

    TransferConfirmRequest:
      type: object
      required:
        - fromWalletUid
        - toWalletUid
        - amount
        - metadata
      properties:
        fromWalletUid:
          type: string
        toWalletUid:
          type: string
        amount:
          type: number
          format: double
        metadata:
          type: object
          description: Дополнительные данные (например, назначение перевода)
          additionalProperties: true

    # Transactions Responses
    TransactionInitResponse:
      type: object
      properties:
        transactionToken:
          type: string
          description: Токен, необходимый для подтверждения транзакции
        fee:
          type: number
          format: double
        expiresAt:
          type: string
          format: date-time

    TransactionConfirmResponse:
      type: object
      properties:
        transactionId:
          type: string
        status:
          type: string
          enum: [ pending, completed, failed ]
        executedAt:
          type: string
          format: date-time

    TransactionStatusResponse:
      type: object
      properties:
        transactionId:
          type: string
        type:
          type: string
          enum: [ deposit, withdrawal, transfer ]
        status:
          type: string
          enum: [ pending, completed, failed ]
        amount:
          type: number
          format: double
        currency:
          type: string
        fromWalletUid:
          type: string
          nullable: true
        toWalletUid:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        executedAt:
          type: string
          format: date-time
          nullable: true

    # Error
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Код ошибки
        message:
          type: string
          description: Описание ошибки
